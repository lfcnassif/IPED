# Audio transcript task config file.

# Default implementation uses Microsoft Azure service.
# You must pass your subscription key using command line parameter -XazureSubscriptionKey=XXXXXXXX
implementationClass = dpf.sp.gpinf.indexer.process.task.transcript.MicrosoftTranscriptTask

# If you want to use the Google Service implementation, comment above and uncomment below.
# You must include google-cloud-speech-1.22.5.jar AND ITS DEPENDENCIES in plugin/optional_jar folder.
# You can download an all-in-one jar from https://gitlab.com/iped-project/iped-maven/-/blob/master/com/google/cloud/google-cloud-speech/1.22.5-shaded/google-cloud-speech-1.22.5-shaded.jar
# Finally you must set environment variable GOOGLE_APPLICATION_CREDENTIALS pointing to your credential file
#implementationClass = dpf.sp.gpinf.indexer.process.task.transcript.GoogleTranscriptTask

# Specific of Microsoft service. Replace with your own subscription region identifier from here: https://aka.ms/speech/sdkregion
serviceRegion = westus

# Language model(s) to use when processing audios. You can set at most 2 separated by ;
# Setting more than 1 model can result in wrong language detection.
language = en-US

# Depending on your subscription, Microsoft limits the number of max concurrent requests
maxConcurrentRequests = 20

# Depending on your subscription, Google limits your request rate (per minute or per second).
requestIntervalMillis = 67

# Command to convert audios to wav before transcription. Do not change $INPUT or $OUTPUT params.
convertCommand = mplayer -benchmark -vo null -vc null -srate 16000 -af format=s16le -af channels=1 -ao pcm:fast:file=$OUTPUT $INPUT

# Mime types or supertypes to process. If you want to add videos use ; as separator and update 'convertCommand'.
mimesToProcess = audio

# Max number of seconds to wait until each audio second is transcribed. A minimum of 10s is always wait.
timeout = 3